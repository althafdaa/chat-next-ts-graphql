### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Date custom scalar type"""
scalar Date

type Follow {
  createdAt: Date
  followerId: String
  following: String
  followingId: String!
  id: String!
  user: User
}

input LoginInput {
  password: String!
  userName: String!
}

type LoginResponse {
  createdAt: Date
  firstName: String
  id: String
  lastName: String
  token: String
  userName: String
}

type LogoutResponse {
  id: String
  message: String
  userName: String
}

type Message {
  createdAt: Date
  id: Int!
  receiverId: String
  senderId: String
  text: String!
}

input MessageInput {
  receiverId: String!
  text: String!
}

type Mutation {
  followPeople(data: followPeopleInput!): Follow
  loginUser(data: LoginInput!): LoginResponse
  logout: LogoutResponse
  registerUser(data: RegisterInput!): User
  sendMessage(data: MessageInput!): Message
  unFollow(data: followPeopleInput!): Follow
}

type Query {
  UserById(data: UserByIdInput!): User
  Users: [User]
  getFollowing: [Follow]
  msgBetweenUser(data: msgBetweenUserInput!): [Message]
  validateLogin: ValidateLogin
}

input RegisterInput {
  confirmPassword: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  userName: String!
}

type User {
  createdAt: Date
  email: String
  firstName: String
  following: [Follow]
  id: String!
  lastName: String
  userName: String
}

input UserByIdInput {
  id: String!
}

type ValidateLogin {
  isLoggedIn: Boolean
  userName: String
}

input followPeopleInput {
  followingId: String!
}

input msgBetweenUserInput {
  receiverId: String!
}